#!/usr/bin/expect -f

# Настройка переменных
set timeout 5000
set prompt "#"
set adapter "ens18"

# Запуск терминала
spawn bash
expect -re $prompt

# Установка самба
send "dnf install samba *krb5* bind -y\r"
expect -re $prompt

set timeout 60

# Установка самба
send "setenforce 0\r"
expect -re $prompt

# Изменение /etc/selinux/config
send "sed -i 's/^SELINUX=.*/SELINUX=permissive/' /etc/selinux/config\r"
expect -re $prompt

# Удаление всех существующих подключений
send "nmcli connection show | grep -v NAME | awk '{print \$1}' | xargs -I {} nmcli connection delete {}\r"
expect -re $prompt

# Создание и активация подключения для $adapter
send "nmcli connection add type ethernet con-name $adapter ifname $adapter ipv4.method manual ipv4.addresses 192.168.3.2/27 ipv4.gateway 192.168.3.1 ipv4.dns 192.168.3.2 ipv4.dns-search au-team.irpo ipv4.ignore-auto-dns true ipv6.addr-gen-mode default ipv6.method disabled connection.uuid a58a9970-625b-4bd1-b3f6-80534d2d5981\r"
expect -re $prompt
send "nmcli connection up $adapter\r"
expect -re $prompt

send "chmod 777 /etc/NetworkManager/system-connections/ens18.nmconnection\r"
expect -re $prompt

send "systemctl restart NetworkManager\r"
expect -re $prompt

send "mv /etc/samba/smb.conf /etc/samba/smb.conf.bak\r"
expect -re $prompt

send "cp /etc/krb5.conf /etc/krb5.conf.bak\r"
expect -re $prompt

send "chown root:named /etc/krb5.conf\r"
expect -re $prompt

#nano /etc/krb5.conf
send "echo -e '# To opt out of the system crypto-policies configuration of krb5, remove the' > /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '# symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e 'includedir /etc/krb5.conf.d/' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '\[logging\]' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    default = FILE:/var/log/krb5libs.log' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    kdc = FILE:/var/log/krb5kdc.log' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    admin_server = FILE:/var/log/kadmind.log' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '\[libdefaults\]' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    dns_lookup_realm = false' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    ticket_lifetime = 24h' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    renew_lifetime = 7d' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    forwardable = true' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    rdns = false' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    spake_preauth_groups = edwards25519' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    dns_canonicalize_hostname = fallback' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    qualify_shortname = \"\"' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    default_realm = AU-TEAM.IRPO' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '    default_ccache_name = KEYRING:persistent:%{uid}' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '\[realms\]' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e ' AU-TEAM.IRPO = {' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '   kdc = br-srv.au-team.irpo' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '   admin_server = br-srv.au-team.irpo' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e ' }' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e '\[domain_realm\]' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e ' .au-team.irpo = AU-TEAM.IRPO' >> /etc/krb5.conf\r"
expect -re $prompt
send "echo -e ' au-team.irpo = AU-TEAM.IRPO' >> /etc/krb5.conf\r"
expect -re $prompt

send "chmod 777 /etc/krb5.conf\r"
expect -re $prompt

send "echo -e '\[libdefaults\]' > /etc/krb5.conf.d/crypto-policies\r"
expect -re $prompt
send "echo -e 'default_tgs_enctypes = aes256-cts-hmac-sha1-96 aes128-cts-hmac-sha1-96 RC4-HMAC DES-CBC-CRC DES3-CBC-SHA1 DES-CBC-MD5' >> /etc/krb5.conf.d/crypto-policies\r"
expect -re $prompt
send "echo -e 'default_tkt_enctypes = aes256-cts-hmac-sha1-96 aes128-nanocts-hmac-sha1-96 RC4-HMAC DES-CBC-CRC DES3-CBC-SHA1 DES-CBC-MD5' >> /etc/krb5.conf.d/crypto-policies\r"
expect -re $prompt
send "echo -e 'preferred_enctypes = aes256-cts-hmac-sha1-96 aes128-cts-hmac-sha1-96 RC4-HMAC DES-CBC-CRC DES3-CBC-SHA1 DES-CBC-MD5' >> /etc/krb5.conf.d/crypto-policies\r"
expect -re $prompt

send "chmod 777 /etc/krb5.conf.d/crypto-policies\r"
expect -re $prompt

#nano /etc/named.conf
//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

options {
        listen-on port 53 { 127.0.0.1; 192.168.3.2; };
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        secroots-file   "/var/named/data/named.secroots";
        recursing-file  "/var/named/data/named.recursing";
        allow-query     { any; };

        /*
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable
           recursion.
         - If your recursive DNS server has a public IP address, you MUST enable access
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface
        */
        recursion yes;

        dnssec-validation yes;

        managed-keys-directory "/var/named/dynamic";
        geoip-directory "/usr/share/GeoIP";

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";

        /* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
        include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "named.ca";
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";

# Перезагрузка системы
send "exit\r"
expect eof
